version: '3.8'
services:
  vote:
    image: roxsross12/voting-app:vote-1.0.0
    container_name: vote-app
    environment:
      - VIRTUAL_HOST=vote.3.92.82.40.sslip.io
      - LETSENCRYPT_HOST=vote.3.92.82.40..sslip.io
      - LETSENCRYPT_EMAIL=zoteldevops@gmail.com
      - VIRTUAL_PORT=80
    ports:
      - 5000:80
    depends_on:
      - redis
    networks:
      - frontend 
      - backend

  result:
    image: roxsross12/voting-app:result-1.0.0
    container_name: result-app
    environment:
      - VIRTUAL_HOST=result.3.92.82.40..sslip.io
      - LETSENCRYPT_HOST=result.3.92.82.40..168.sslip.io
      - LETSENCRYPT_EMAIL=zoteldevops@gmail.com
      - VIRTUAL_PORT=80
    ports:
      - 5001:80
    depends_on:
      - bd
    networks:
      - frontend
      - backend


  worker:
    image: roxsross12/voting-app:worker-1.0.0
    container_name: worker-app
    depends_on:
      - bd
      - redis
    networks:
      - backend


  bd:
    image: postgres:15-alpine
    container_name: db
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
    volumes:
      - db-data:/var/lib/postgresql/data
    networks:
      - backend
  pgadmin:
    image: dpage/pgadmin4:6.17
    container_name: pgadmin
    ports:
      - 8080:80
    environment:
      - PGADMIN_DEFAULT_EMAIL=admin@example.com
      - PGADMIN_DEFAULT_PASSWORD=secret123
      - PGADMIN_LISTEN_PORT=80
    depends_on:
      - bd
    volumes:
      - pgadmin-data:/var/lib/pgadmin
    networks:
      - backend

  redis:
    image: redis:alpine
    container_name: redis
    volumes:
      - redis-data:/data
    networks:
      - backend

  nginx-proxy:
    image: jwilder/nginx-proxy
    container_name: nginx-proxy
    ports:
      - 80:80
      - 443:443
    volumes:
      - html:/usr/share/nginx/html
      - certs:/etc/nginx/certs
      - vhostd:/etc/nginx/vhost.d
      - /var/run/docker.sock:/var/run/docker.sock:ro
      - confd:/etc/nginx/conf.d
    networks:
      - frontend
    labels:
      - com.github.jrcs.letsencrypt_nginx_proxy_companion.nginx_proxy

  letsencrypt:
    image: jrcs/letsencrypt-nginx-proxy-companion
    container_name: letsencrypt
    depends_on:
      - nginx-proxy
    volumes:
      - html:/usr/share/nginx/html
      - certs:/etc/nginx/certs
      - vhostd:/etc/nginx/vhost.d
      - /var/run/docker.sock:/var/run/docker.sock:ro
    networks:
      - frontend

volumes:
  db-data:
  redis-data:
  pgadmin-data:
  html:
  certs:
  vhostd:
  confd:

networks:
  frontend:
  backend:


